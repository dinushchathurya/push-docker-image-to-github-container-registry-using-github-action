# name: Docker Image CI

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# env:
#   IMAGE_NAME: nodejs-github

# jobs:

#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3

#     - name: Set up Docker Buildx
#       id: buildx
#       uses: docker/setup-buildx-action@v1.0.2

#     - name: Login to Github Packages
#       uses: docker/login-action@v1
#       with:
#         registry: ghcr.io
#         username: ${{ github.repository_owner }}
#         password: ${{ secrets.GHCR_PAT }}
    
#     - name: Build image and push to GitHub Container Registry
#       run: |
#         IMAGE_ID = ghcr.io/${{ github.repository_owner }}/
#         IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        

    #     docker build . --tag ghcr.io/${{ github.repository_owner }}/nodejs-github:latest
    #     docker push ghcr.io/${{ github.repository_owner }}/nodejs-github:latest

    # - name: Image digest
    #   run: echo ${{ steps.docker_build.outputs.digest }}

name: Demo Push

on:   
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - seed

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: ghtoken_product_demo

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Login to Github Packages
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GHCR_PAT }}
            
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION